library(base)
library(ggplot2)
library(MASS)
library(splines)
library(matrixStats)
library(tidyverse)
library(cowplot)
library(ggrepel)
library(stats)
getwd()
setwd("C:/Users/40991/Desktop/project_wxy")
data_orphan<-read.csv('DATA/global_extrapolation.csv',stringsAsFactors = FALSE)
europ <- data_orphan%>%filter(euro=='1')
plot(europ$total_pop,europ$total_deaths)
# exclude south africa
data_orphan_adjust <- data_orphan%>%filter(country!='South Africa')
final <- lm(orphan_death_ratio ~ tfr + euro, data = data_orphan_adjust)
summary(final)
fit_logistic <- glm(orphan_death_ratio ~ tfr, family = binomial, data = data_orphan)
summary(fit_logistic)
View(data_orphan)
p <- ggplot(data_orphan) +
geom_point( aes(x = tfr, y = orphan_death_ratio)) +
xlab("Total fertility rate") + ylab("Ratio of children orphaned to all-cause deaths") +
theme_bw()
p <- p + geom_text_repel(aes(x = tfr, y = orphan_death_ratio, label = country), size = 3, max.overlaps = 100)
p
pred_orphan_death_ratio <- data.frame(predict(fit_linear, newdata = data.frame(tfr = new_tfr),
interval = "confidence"),
new_tfr = new_tfr)
# linear model
fit_linear <- lm(orphan_death_ratio ~ tfr, data = data_orphan)
p_linear<-p +
geom_abline(slope = fit_linear$coefficients[2], intercept = fit_linear$coefficients[1],
color = "red", size = 1, alpha = 0.5)
print(p_linear)
